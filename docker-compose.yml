services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:16-3.4
    container_name: database-mcp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ClickHouse for analytics
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: database-mcp-clickhouse
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    ports:
      - "9001:9000"  # Native protocol
      - "8124:8123"  # HTTP interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./scripts/init-clickhouse.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database MCP Server (for testing)
  database-mcp:
    build: .
    container_name: database-mcp-server
    environment:
      DB_PRIMARY_URL: "postgres://postgres:password@postgres:5432/postgres?sslmode=disable"
      DB_ANALYTICS_URL: "clickhouse://default:@clickhouse:9000/default"
      READ_ONLY: "true"
      MAX_ROWS: "10000"
      QUERY_TIMEOUT_MS: "30000"
      LOG_LEVEL: "info"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  clickhouse_data: